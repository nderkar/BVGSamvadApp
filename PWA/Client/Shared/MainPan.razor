@using Samvad_App.Shared.Models
@inject HttpClient Http
<AuthorizeView>
    <Authorized>
<!-- ================= Timeline ================= -->
<div class="col-12 col-lg-6 pb-5">
    <div class="d-flex flex-column justify-content-center w-100 mx-auto"
         style="padding-top: 56px; max-width: 680px">
        <!-- Create Post-->
                <CreatePost onPostCreated="RefreshPost" />

        <!-- posts -->
        
        <!-- p 2 -->
                @foreach (var p in orderedList)
                {
                    <div class="bg-white p-4 rounded shadow mt-3">
                        <!-- author -->
                        <PostOwner p="@p"/>
                        <!-- post content -->
                        <div class="mt-3">
                            <!-- content -->
                            <div>
                                <p>
                                    @p.postmessage
                                </p>
                                <!-- Photo Grid -->
                              <PostAssets post="@p"/>
                            </div>
                            <!-- likes & comments -->
                            <div class="post__comment mt-3 position-relative">
                                <!-- likes -->
                                <div class="
                      d-flex
                      align-items-center
                      top-0
                      start-0
                      position-absolute
                    "
                                 style="height: 50px; z-index: 5">
                                    <div class="me-2">
                                        <i class="text-primary fas fa-thumbs-up"></i>
                                        <!--i class="text-danger fab fa-gratipay"></i>
                                        <i class="text-warning fas fa-grin-squint"></i-->
                                    </div>
                                    <p class="m-0 text-muted fs-7">
                                        @if(p.likecount > 0){
                                            if (p.likecount == 1) {
                                                @p.likecount
                                                @sLike}
                                            else {
                                                @p.likecount
                                                @sLikes
                                            }
                                        }
                                        else
                                        {
                                            @sNoLike
                                        }
                                        <!--Phu, Tuan, and 3 others--></p>
                                </div>
                                <!-- comments start-->
                                <div class="accordion" id="accordionExample">
                                    <div class="accordion-item border-0">
                                        <!-- comment collapse -->
                                        <h2 class="accordion-header" id="headingTwo">
                                            <div class="
                            accordion-button
                            collapsed
                            pointer
                            d-flex
                            justify-content-end
                          "
                                             data-bs-toggle="collapse"
                                             data-bs-target="#collapsePost1"
                                             aria-expanded="false"
                                             aria-controls="collapsePost1">
                                                <p class="m-0">2 Comments</p>
                                            </div>
                                        </h2>
                                        <hr />
                                        <!-- comment & like bar -->
                                        <div class="d-flex justify-content-around">
                                            <div class="
                            dropdown-item
                            rounded
                            d-flex
                            justify-content-center
                            align-items-center
                            pointer
                            text-muted
                            p-1
                          ">
                                                <i class="text-primary fas fa-thumbs-up me-3"></i>
                                                <p class="m-0">Like</p>
                                            </div>
                                            <div class="
                            dropdown-item
                            rounded
                            d-flex
                            justify-content-center
                            align-items-center
                            pointer
                            text-muted
                            p-1
                          "
                                             data-bs-toggle="collapse"
                                             data-bs-target="#collapsePost1"
                                             aria-expanded="false"
                                             aria-controls="collapsePost1">
                                                <i class="fas fa-comment-alt me-3"></i>
                                                <p class="m-0">Comment</p>
                                            </div>
                                        </div>
                                        <PostComment p="@p"/>
                                       <!--ddd-->
                                    </div>
                                </div>
                                <!-- end -->
                            </div>
                        </div>
                    </div>

                    <!--Gallery-->

                    <!--End-->
                }

    </div>
</div>


<!--End-->
</Authorized>
</AuthorizeView>

@code {
    UserModel currentUser = new UserModel();
    List<PostModel> postList = new List<PostModel>();
    string sNoLike = "0 like";
    string sLike = "like";
    string sLikes = "likes";
    IEnumerable<PostModel> orderedList => postList.OrderByDescending(i => i.createdate);
    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("api/accounts");
        currentUser = await response.Content.ReadFromJsonAsync<UserModel>();
        var responsePosts = await Http.GetAsync("api/post");
        responsePosts.EnsureSuccessStatusCode();
        postList = await responsePosts.Content.ReadFromJsonAsync<List<PostModel>>();
    }
    private async Task RefreshPost(PostModel newPost)
    {
        //postList.Add(newPost);
        //orderedList.Append(newPost);

        postList = new List<PostModel>();
        var responsePosts = await Http.GetAsync("api/post");
        responsePosts.EnsureSuccessStatusCode();
        postList = await responsePosts.Content.ReadFromJsonAsync<List<PostModel>>();
    }

}
