@page "/deleteemployee/{Id}"
@using Samvad_App.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<h2>Delete employee</h2>
@if (employee != null)
{
    <p>Are you sure you want to delete this employee with Name: <b>@employee.FirstName @employee.LastName</b></p>
    <div class="row">
        <div class="col-md-4">
            <table class="table mx-2">
                <tr>
                    <td>Name</td>
                    <td>@employee.FirstName @employee.LastName</td>
                </tr>
                <tr>
                    <td>Email</td>
                    <td>@employee.Email</td>
                </tr>
                <tr>
                    <td>Mobile Number</td>
                    <td>@employee.MobileNo</td>
                </tr>
            </table>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@Delete" value="Delete" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string Id { get; set; }
    EmployeeModel employee = new EmployeeModel();
    protected override async Task OnInitializedAsync()
    {
        employee = await Http.GetFromJsonAsync<EmployeeModel>("api/employee/" + Id);
    }
    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("api/employee/" + Id);
        bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();
        if (deleteResponse)
        {
            //await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("employeelist");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("employeelist");
    }
}