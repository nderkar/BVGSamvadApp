@page "/deleteuser/{id}"
@using Samvad_App.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<PageTitle>BVG Samvad Delete User</PageTitle>
<div class="col-12 col-lg-6 pb-5">
            <div class="d-flex flex-column justify-content-center w-100 mx-auto"
                 style="padding-top: 56px; max-width: 680px">

        <div class="container light-style flex-grow-1 container-p-y mt-2">
            <h4 class="font-weight-bold py-3 mb-4">
                Delete User
            </h4>
@if (_user != null)
            {
                <p>Are you sure you want to delete this employee with Name: <b>@_user.FirstName @_user.LastName</b></p>
                <div class="row">
                    <div class="col-md-8">
                <table class="table mx-4">
                    <tr>
                        <td>Name</td>
                    <td>@_user.FirstName @_user.LastName</td>
                    </tr>
                    <tr>
                        <td>Email</td>
                    <td>@_user.Email</td>
                    </tr>
                    <tr>
                        <td>Mobile Number</td>
                    <td>@_user.PhoneNumber</td>
                    </tr>
                </table>
            </div>
        </div>
}
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@Delete" value="Delete" />
            <input type="button" class="btn btn-default" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</div>
</div>
</div>
</div>
@code {

    [Parameter]
    public string Id { get; set; }
    UserModel _user = new UserModel();
    protected override async Task OnInitializedAsync()
    {
        _user = await Http.GetFromJsonAsync<UserModel>("api/accounts/" + Id);
    }
    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("api/accounts/" + Id);
        bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();
        if (deleteResponse)
        {
            //await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("userlist");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("userlist");
    }
}
