@inject IAuthService AuthService
@using Samvad_App.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<div class="col-12 col-lg-6 pb-5">
    <div class="d-flex flex-column justify-content-center w-100 mx-auto"
         style="padding-top: 56px; max-width: 680px">


        <div class="container light-style flex-grow-1 container-p-y mt-2">
            <h4 class="font-weight-bold py-3 mb-4">
                Edit User Information
            </h4>
            <div class="card overflow-hidden">
                <div class="row no-gutters row-bordered row-border-light">
                    
                    <div class="col-sm-12">
        @if (ShowErrors)
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in Errors)
                {
                    <p>error</p>
                }
            </div>
        }
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Please enter your details</h5>
                <EditForm Model="@RegisterModel" OnValidSubmit="@HandleRegistration">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group pt-2">
                        <label for="firstname">First Name</label>
                        <InputText Id="firstname" Class="form-control" @bind-Value="@RegisterModel.FirstName" />
                        <ValidationMessage For="@(() => RegisterModel.FirstName)" />
                    </div>
                    <div class="form-group pt-2">
                        <label for="lastname">Last Name</label>
                        <InputText Id="lastname" Class="form-control" @bind-Value="@RegisterModel.LastName" />
                        <ValidationMessage For="@(() => RegisterModel.LastName)" />
                    </div>
                    <div class="form-group pt-2">
                        <label for="email">User Type : </label>
                        <InputRadioGroup Class="form-control" @bind-Value="@RegisterModel.UserRole">
                            @foreach (var option in roleOptions)
                            {
                                <InputRadio class="p-2 m-2"  Value="@option" /> @option
                            }
                        </InputRadioGroup>
                    </div>
                    <div class="form-group pt-2">
                        <label for="lastname">Category</label>
                        <InputText Id="category" Class="form-control" @bind-Value="@RegisterModel.Category" />
                    </div>
                    <div class="form-group pt-2">
                        <label for="lastname">Phone Number</label>
                        <InputText Id="phoneNumber" Class="form-control" @bind-Value="@RegisterModel.PhoneNumber" />
                    </div>
                    <div class="form-group pt-2">
                        <label for="email">Email address</label>
                        <InputText Id="email" readonly Class="form-control" @bind-Value="@RegisterModel.Email" />
                        <ValidationMessage For="@(() => RegisterModel.Email)" />
                    </div>
                   
                    <div class="form-group pt-4">
                        <button type="submit" class="btn btn-primary">Update</button>&nbsp;
                        <a style="font-weight: bold;" class="btn btn-default" href="/userlist">Cancel</a>
                    </div>

                </EditForm>
            </div>
        </div>
        </div>
        <div>
            </div>
            </div>
        </div>
    </div>
    </div>
</div>
@code {
    [Parameter]
    public string Id { get; set; }
    private EditUserModel RegisterModel = new EditUserModel();
    UserModel _user = new UserModel();
    protected override async Task OnInitializedAsync()
    {
        _user = await Http.GetFromJsonAsync<UserModel>("api/accounts/" + Id);
        RegisterModel.FirstName = _user.FirstName;
        RegisterModel.LastName = _user.LastName;
        RegisterModel.Email = _user.Email;
        RegisterModel.Id = _user.Id;
        RegisterModel.Category = _user.Category;
        RegisterModel.PhoneNumber = _user.PhoneNumber;

        var response = await Http.GetAsync("api/accounts/anyuser/getroles/" + Id);
        IList<string> userRoles;
        userRoles = await response.Content.ReadFromJsonAsync<IList<string>>();
        RegisterModel.UserRole = "User";
        if (userRoles != null)
        {
            if (userRoles.Contains("Admin"))
            {
                RegisterModel.UserRole = "Admin";
            }
        }
    }
    private bool ShowErrors;
    private IEnumerable<string> Errors;
    List<string> roleOptions = new List<string> { "User", "Admin" };

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.UpdateUser(RegisterModel);
        if (result.Successful)
        {
             NavigationManager.NavigateTo("userlist");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
    
    void Cancel()
    {
        NavigationManager.NavigateTo("userlist");
    }
}
