@inject IAuthService AuthService
@inject NavigationManager NavMan

<div class="col-12 col-lg-6 pb-5">
    <div class="d-flex flex-column justify-content-center w-100 mx-auto"
         style="padding-top: 56px; max-width: 680px">


        <div class="container light-style flex-grow-1 container-p-y mt-2">
            <h4 class="font-weight-bold py-3 mb-4">
                Change Pasword
            </h4>
            <div class="card overflow-hidden">
                <div class="row no-gutters row-bordered row-border-light">
                    
                    <div class="col-sm-12">

            @if (ShowErrors)
            {
                <div class="alert alert-danger" role="alert">
                    <p>@Error</p>
                </div>
            }
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Please enter a new password</h5>
                    <EditForm Model="@ChangePasswordModel" OnValidSubmit="@HandleChangePassword">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group pt-2">
                            <label for="password">Old Password</label>
                            <InputText type="password" Id="oldpassword" Class="form-control" @bind-Value="@ChangePasswordModel.OldPassword" />

                        </div>

                        <div class="form-group pt-2">
                            <label for="password">Password</label>
                            <InputText type="password" Id="password" Class="form-control" @bind-Value="@ChangePasswordModel.Password" />
                            <ValidationMessage For="@(() => ChangePasswordModel.Password)" />
                        </div>
                        <div class="form-group pt-2">
                            <label for="password">Confirm Password</label>
                            <InputText type="password" Id="password" Class="form-control" @bind-Value="@ChangePasswordModel.ConfirmPassword" />
                            <ValidationMessage For="@(() => ChangePasswordModel.ConfirmPassword)" />
                        </div>
                        <div class="form-group pt-4">
                            <button type="submit" class="btn btn-primary">Save</button>&nbsp;
                            <a style="font-weight: bold;" class="btn btn-default" href="/profile/@Id">Cancel</a>
                        </div>

                    </EditForm>
                </div>
            </div>
            </div>
            </div>
            </div>
        </div>
    </div>

</div>
@code {
    [Parameter]
    public string Id { get; set; }
    private ChangeUserPasswordModel ChangePasswordModel = new ChangeUserPasswordModel();
    private bool ShowErrors;
    private string Error = "";
    private async Task HandleChangePassword()
    {
        ShowErrors = false;
        ChangePasswordModel.Id = Id;        
        var result = await AuthService.ChangeUserPassword(ChangePasswordModel);

        if (result.Successful)
        {
            NavMan.NavigateTo("/profile/" + Id);
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }
}
