@using Samvad_App.Shared.Models
@inject HttpClient Http
<AuthorizeView>
    <Authorized>
<!-- ================= Timeline ================= -->
<div class="col-12 col-lg-6 pb-5">
    <div class="d-flex flex-column justify-content-center w-100 mx-auto"
         style="padding-top: 56px; max-width: 680px">
        <!-- Create Post-->
                <CreatePost onPostCreated="RefreshPost" />

        <!-- posts -->
        
        <!-- p 2 -->
                @foreach (var p in orderedList)
                {
                    <div class="bg-white p-4 rounded shadow mt-3">
                        <!-- author -->
                        <PostOwner p="@p"/>
                        <!-- post content -->
                        <div class="mt-3">
                            <!-- content -->
                            <div>
                                <p>
                                    @p.postmessage
                                </p>
                                <!-- Photo Grid -->
                              <PostAssets post="@p"/>
                            </div>
                            <!-- likes & comments -->
                            <PostLikeAndComment p="@p"/>
                        </div>
                    </div>

                    <!--Gallery-->

                    <!--End-->
                }

    </div>
</div>


<!--End-->
</Authorized>
</AuthorizeView>

@code {
    UserModel currentUser = new UserModel();
    List<PostModel> postList = new List<PostModel>();
   
    IEnumerable<PostModel> orderedList => postList.OrderByDescending(i => i.createdate);
    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("api/accounts");
        currentUser = await response.Content.ReadFromJsonAsync<UserModel>();
        var responsePosts = await Http.GetAsync("api/post");
        responsePosts.EnsureSuccessStatusCode();
        postList = await responsePosts.Content.ReadFromJsonAsync<List<PostModel>>();
    }
    private async Task RefreshPost(PostModel newPost)
    {
        //postList.Add(newPost);
        //orderedList.Append(newPost);

        postList = new List<PostModel>();
        var responsePosts = await Http.GetAsync("api/post");
        responsePosts.EnsureSuccessStatusCode();
        postList = await responsePosts.Content.ReadFromJsonAsync<List<PostModel>>();
    }

}
