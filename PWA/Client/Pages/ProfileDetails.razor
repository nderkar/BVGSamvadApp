@page "/profile/{id}"
@inject IAuthService AuthService
@using Samvad_App.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<PageTitle>BVG Samvad User Profile</PageTitle>

<div class="col-12 col-lg-6 pb-5">
    <div class="d-flex flex-column justify-content-center w-100 mx-auto"
         style="padding-top: 56px; max-width: 680px">


        <div class="container light-style flex-grow-1 container-p-y mt-2">
            <h4 class="font-weight-bold py-3 mb-4">
                Profile Detail
            </h4>
            <div class="card overflow-hidden">
                <div class="row no-gutters row-bordered row-border-light">
                    
                    <div class="col-sm-12">
                        <div class="tab-content">
                            <div class="tab-pane fade active show" id="account-general">
                                <div class="card-body media align-items-center">
                                    @if (@_user.ProfilePicture == null)
                                    {
                                        <img src="./images/user/@defaultAvatar"
                                         alt="Avatar"
                                         class="d-block ui-w-80" />
                                    }
                                    else
                                    {
                                        <img src="./images/user/@_user.ProfilePicture"
                                         alt="Avatar"
                                         class="d-block ui-w-80" />
                                    }
                                    <div class="mt-2">
                                    <label class="btn btn-outline-primary">
                                            Upload new photo
                                        <InputFile
                                                   OnChange="@HandleFileInputChange"
                                                   class="account-settings-fileinput"
                                                   accept="image/png,image/gif,image/jpeg"></InputFile>
                                        </label> &nbsp;
                                    <div class="text-light small mt-1">Allowed JPG, GIF or PNG. Max size of @MaxFileSizeMB MB</div>
                                    </div>
                                    
                                </div>
                                <div class="card-body">
                                    <div class="form-group">
                                        <label class="form-label">@_user.FirstName @_user.LastName</label>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">User Type : </label>
                                        <label class="form-text">@if(userRoles.Contains("Admin"))
                                            {
                                                @adminUser
                                            }
                                            else
                                            {
                                                @generalUser
                                            }
                                        </label>

                                    </div>
                                </div>
                                <hr class="border-light m-0">                                
                                <div class="card-body">
                                    <div class="form-group">
                                        <label class="form-label">Email</label>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-text">@_user.Email </label>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Category</label>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-text">@_user.Category </label>
                                    </div>
                                     <div class="form-group">
                                        <label class="form-label">Phone</label>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-text">@_user.PhoneNumber </label>
                                    </div>
                                </div>
                            </div>                                                       
                        </div>
                    </div>
                    <div class="text-right m-3 mb-4">
                        <a class="btn btn-primary" href="/edituser/@Id">Edit Profile</a>
                        <a class="btn btn-primary" href="/changeuserpassword/@Id">Change Password</a>&nbsp;
                        <a style="font-weight: bold;" class="btn btn-default" href="/userlist">Cancel</a>
                    </div>
                </div>
            </div>
            
        </div>


    </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }
    UserModel _user = new UserModel();
    string defaultAvatar { get; set; }
    IList<string> userRoles;
    string adminUser = "Admin";
    string generalUser = "User";
    const int MaxFileSizeMB = 10;
    const int MaxFileSize = MaxFileSizeMB * 1024 * 1024;
    private bool fileSizeError = false;
    private bool fileTypeError = false;
    public FileData fileData = new FileData();
    protected override async Task OnInitializedAsync()
    {
        defaultAvatar = "defaultuser.jpg";
        _user = await Http.GetFromJsonAsync<UserModel>("api/accounts/" + Id);

        var response = await Http.GetAsync("api/accounts/anyuser/getroles/" + Id);
        
        userRoles = await response.Content.ReadFromJsonAsync<IList<string>>();
      
    }
    private async Task HandleFileInputChange(InputFileChangeEventArgs e)
    {
        fileSizeError = false;
        fileTypeError = false;
        List<string> acceptedFileTypes = new List<string>()
        { "image/png", "image/jpeg", "image/gif" };
        IBrowserFile file = e.File;

        bool error = false;
        if (file.Size > MaxFileSize)
        {
            error = true;
            fileSizeError = true;
        }

        if (!acceptedFileTypes.Contains(file.ContentType))
        {
            error = true;
            fileTypeError = true;
        }

        //keep the good files
        if (!error)
        {
            var buffers = new byte[file.Size];
            await file.OpenReadStream(MaxFileSize).ReadAsync(buffers);
            string imageType = file.ContentType;
            int dotIndex = file.Name.LastIndexOf(".");
            string fileExtension = "";
            if (dotIndex > 0)
            {
                fileExtension = file.Name.Substring(dotIndex + 1);
            }
            fileData = new FileData()
                {

                    Data = buffers,
                    FileExtension = fileExtension,
                    Size = file.Size,
                    FileName = file.Name
                };

            var response = await Http.PostAsJsonAsync("/api/FileUpload/save-avatar", fileData);
            _user.ProfilePicture = await response.Content.ReadAsStringAsync();
            var result = await AuthService.UpdateUserAvatar(_user);
            _user = await Http.GetFromJsonAsync<UserModel>("api/accounts/" + Id);
        }

    }
}