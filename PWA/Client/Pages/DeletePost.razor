@page "/deletepost/{id}"
@using Samvad_App.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<PageTitle>BVG Samvad Delete Post</PageTitle>
<div class="col-12 col-lg-6 pb-5">
    <div class="d-flex flex-column justify-content-center w-100 mx-auto"
         style="padding-top: 56px; max-width: 680px">

        <div class="container light-style flex-grow-1 container-p-y mt-2">
            <h4 class="font-weight-bold py-3 mb-4">
                Delete Post
            </h4>
            @*@if (post != null)
            {*@
                <p>Are you sure you want to delete this post</p>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <input type="button" class="btn btn-primary" @onclick="@Delete" value="Delete" />
                            <input type="button" class="btn btn-default" @onclick="@Cancel" value="Cancel" />
                        </div>
                    </div>
                </div>
                <div class="bg-white p-3 first-childadmin mt-2 rounded shadow">
                    <!-- author -->
                <OwnerOfPost postId="@Id" />
                    <!-- post content -->
                    <div class="mt-3">
                        <!-- content -->
                        <div>
                            <p>
                                @post.postmessage
                            </p>
                            <!-- Photo Grid -->
                            <AssetsOfPost postId="@Id" />
                        </div>                      
                    </div>
                </div>
           @* }*@
           
        </div>
    </div>
</div>
@code {

    [Parameter]
    public string Id { get; set; }
    PostModel post = new PostModel();
    protected override async Task OnInitializedAsync()
    {
        post = new PostModel();
        post = await Http.GetFromJsonAsync<PostModel>("api/post/" + Id);
        StateHasChanged();
    }
    protected async Task Delete()
    {
        var response = await Http.DeleteAsync("api/post/" + Id);
        bool deleteResponse = await response.Content.ReadFromJsonAsync<bool>();
        if (deleteResponse)
        {
            //await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo("/");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
